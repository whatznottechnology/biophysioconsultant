# Generated by Django 5.2.7 on 2025-10-08 22:27

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('duration_minutes', models.PositiveIntegerField(default=30, help_text='Duration of the service in minutes')),
                ('price', models.DecimalField(decimal_places=2, default=200.0, help_text='Service price in INR', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_prescription', models.BooleanField(default=False, help_text='Whether this service requires prescription upload')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_age', models.PositiveIntegerField()),
                ('patient_gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('patient_phone', models.CharField(max_length=20)),
                ('patient_whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('present_complaints', models.TextField(help_text='Current health issues and symptoms')),
                ('medical_history', models.TextField(blank=True, help_text='Previous medical history', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_amount', models.DecimalField(decimal_places=2, default=200.0, max_digits=10)),
                ('payment_id', models.CharField(blank=True, help_text='Razorpay payment ID', max_length=100, null=True)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bookings.service')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
                'unique_together': {('appointment_date', 'appointment_time')},
            },
        ),
        migrations.CreateModel(
            name='PrescriptionUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Upload prescription or medical reports (PDF, JPG, PNG)', upload_to='prescriptions/%Y/%m/%d/')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, help_text='Description of the uploaded file', null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='bookings.booking')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prescription Upload',
                'verbose_name_plural': 'Prescription Uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('max_appointments', models.PositiveIntegerField(default=1, help_text='Maximum appointments for this slot')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['weekday', 'start_time'],
                'unique_together': {('weekday', 'start_time', 'end_time')},
            },
        ),
    ]
