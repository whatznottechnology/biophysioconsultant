# Generated by Django 5.2.7 on 2025-10-08 22:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PractitionerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Pratap Bag', max_length=200)),
                ('qualifications', models.TextField(default='M. D. (Acu.), M. B. S., DMT, DPT, D. Mass. T., D. Cup. T, FWT, PET.')),
                ('registration_number', models.CharField(default='S/53515/201', max_length=100)),
                ('specializations', models.TextField(default='Acupressure, Magnet Therapy, Massage, Cupping, Physiotherapy, Biochemic Consultancy')),
                ('profile_image', models.ImageField(blank=True, help_text='Practitioner profile photo', null=True, upload_to='practitioner/')),
                ('bio', models.TextField(help_text='Professional biography')),
                ('experience_years', models.PositiveIntegerField(default=0, help_text='Years of experience')),
                ('achievements', models.TextField(blank=True, help_text='Professional achievements and awards', null=True)),
                ('education', models.TextField(help_text='Educational background')),
                ('previous_experience', models.TextField(blank=True, help_text='Previous work experience', null=True)),
                ('publications', models.TextField(blank=True, help_text='Books, articles, and publications', null=True)),
                ('philosophy', models.TextField(blank=True, help_text='Treatment philosophy and approach', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Practitioner Profile',
                'verbose_name_plural': 'Practitioner Profiles',
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(blank=True, help_text='CSS icon class or emoji', max_length=50)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service Category',
                'verbose_name_plural': 'Service Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Pratap Bag Healthcare', max_length=200)),
                ('site_tagline', models.CharField(default='Holistic Health & Physiotherapy Services', max_length=500)),
                ('site_description', models.TextField(default='Professional healthcare services including physiotherapy, acupressure, massage therapy, and alternative medicine by certified practitioner Pratap Bag.')),
                ('site_logo', models.ImageField(blank=True, help_text='Site logo (recommended: 200x200px)', null=True, upload_to='site/')),
                ('site_favicon', models.ImageField(blank=True, help_text='Site favicon (recommended: 32x32px)', null=True, upload_to='site/')),
                ('meta_title', models.CharField(blank=True, help_text='Meta title for SEO', max_length=200)),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO')),
                ('meta_keywords', models.TextField(blank=True, help_text='Meta keywords for SEO (comma separated)')),
                ('contact_phone', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_address', models.TextField(blank=True)),
                ('facebook_url', models.URLField(blank=True, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('instagram_url', models.URLField(blank=True, null=True)),
                ('linkedin_url', models.URLField(blank=True, null=True)),
                ('youtube_url', models.URLField(blank=True, null=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=200.0, help_text='Default consultation fee in INR', max_digits=10)),
                ('is_booking_enabled', models.BooleanField(default=True, help_text='Enable/disable online booking')),
                ('is_payment_enabled', models.BooleanField(default=True, help_text='Enable/disable online payment')),
                ('booking_advance_days', models.PositiveIntegerField(default=30, help_text='Maximum days in advance for booking')),
                ('booking_cancel_hours', models.PositiveIntegerField(default=24, help_text='Minimum hours before appointment to cancel')),
                ('admin_email', models.EmailField(blank=True, help_text='Admin email for notifications', max_length=254)),
                ('send_booking_notifications', models.BooleanField(default=True, help_text='Send email notifications for new bookings')),
                ('send_reminder_notifications', models.BooleanField(default=True, help_text='Send appointment reminder emails')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Enable maintenance mode')),
                ('maintenance_message', models.TextField(blank=True, default='Site is under maintenance. Please check back later.', help_text='Message to show during maintenance')),
                ('google_analytics_id', models.CharField(blank=True, help_text='Google Analytics tracking ID', max_length=50)),
                ('google_tag_manager_id', models.CharField(blank=True, help_text='Google Tag Manager ID', max_length=50)),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='Facebook Pixel ID', max_length=50)),
                ('pwa_app_name', models.CharField(default='Pratap Bag Healthcare', max_length=200)),
                ('pwa_short_name', models.CharField(default='PB Healthcare', max_length=50)),
                ('pwa_theme_color', models.CharField(default='#10B981', help_text='PWA theme color (hex code)', max_length=7)),
                ('pwa_background_color', models.CharField(default='#ffffff', help_text='PWA background color (hex code)', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Settings',
                'verbose_name_plural': 'Site Settings',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_location', models.CharField(blank=True, help_text='City or location', max_length=100)),
                ('treatment_for', models.CharField(help_text='What condition was treated', max_length=200)),
                ('testimonial', models.TextField()),
                ('rating', models.PositiveIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], default=5)),
                ('patient_image', models.ImageField(blank=True, help_text='Patient photo (optional)', null=True, upload_to='testimonials/')),
                ('is_featured', models.BooleanField(default=False, help_text='Show on homepage')),
                ('is_approved', models.BooleanField(default=False, help_text='Approved for display')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
                'ordering': ['-created_at'],
            },
        ),
    ]
