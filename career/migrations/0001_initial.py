# Generated by Django 5.2.6 on 2025-10-09 22:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='JobOpening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField(help_text='Job requirements and qualifications')),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('volunteer', 'Volunteer')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(choices=[('fresher', 'Fresher (0-1 years)'), ('junior', 'Junior (1-3 years)'), ('mid', 'Mid Level (3-5 years)'), ('senior', 'Senior (5+ years)')], default='fresher', max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum salary in INR', max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum salary in INR', max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('application_deadline', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Job Opening',
                'verbose_name_plural': 'Job Openings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Full Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1, verbose_name='Sex')),
                ('whatsapp_number', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='WhatsApp No.')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('qualification', models.CharField(max_length=300, verbose_name='Qualification')),
                ('address', models.TextField(verbose_name='Address')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('selected', 'Selected'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='submitted', max_length=30)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for HR/Admin', null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('job_opening', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='career.jobopening')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-submitted_at'],
                'unique_together': {('job_opening', 'email')},
            },
        ),
    ]
